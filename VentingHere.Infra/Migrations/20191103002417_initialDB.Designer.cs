// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VentingHere.Infra;

namespace VentingHere.Infra.Migrations
{
    [DbContext(typeof(VentingContext))]
    [Migration("20191103002417_initialDB")]
    partial class initialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VentingHere.Domain.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyReply");

                    b.Property<DateTime>("ReplyDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId");

                    b.Property<int?>("VentId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VentId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About");

                    b.Property<string>("Address");

                    b.Property<string>("CompanyName");

                    b.Property<string>("Logo");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("RateId");

                    b.Property<string>("WebSiteAddress");

                    b.HasKey("Id");

                    b.HasIndex("RateId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Message");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserId");

                    b.Property<int>("numStar");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Rate");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("SectorName");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("County");

                    b.Property<string>("Email");

                    b.Property<string>("Image");

                    b.Property<string>("LoginName");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Vent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("RegisterDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.Property<string>("VentDescription");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Vent");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Answer", b =>
                {
                    b.HasOne("VentingHere.Domain.Entities.User", "User")
                        .WithMany("ListReplies")
                        .HasForeignKey("UserId");

                    b.HasOne("VentingHere.Domain.Entities.Vent", "Vent")
                        .WithMany("ListReplies")
                        .HasForeignKey("VentId");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Company", b =>
                {
                    b.HasOne("VentingHere.Domain.Entities.Rate", "Rate")
                        .WithOne("Company")
                        .HasForeignKey("VentingHere.Domain.Entities.Company", "RateId");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Rate", b =>
                {
                    b.HasOne("VentingHere.Domain.Entities.User", "User")
                        .WithMany("ListRates")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Sector", b =>
                {
                    b.HasOne("VentingHere.Domain.Entities.Company", "Company")
                        .WithOne("Sector")
                        .HasForeignKey("VentingHere.Domain.Entities.Sector", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VentingHere.Domain.Entities.Vent", b =>
                {
                    b.HasOne("VentingHere.Domain.Entities.Company", "Company")
                        .WithMany("ListVents")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VentingHere.Domain.Entities.User", "User")
                        .WithMany("ListVents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
